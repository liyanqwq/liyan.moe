---
import { ClientRouter } from 'astro:transitions';
import '../styles/global.css';

import { siteConfig } from "../data/config";

const locale = Astro.currentLocale;

const config = siteConfig[locale];

const localPath = Astro.url.pathname.replace(`/${locale}`, '');

const i18nPath = (lang: string) => {
    if (lang === locale) return localPath;
    if (lang === 'zh') return localPath;
    return `/${lang}${localPath}`;
}
const nav = config.nav;
let title = config.title;
Object.entries(nav).map(([slug, section]: [string, { title: string; slug: string; }]) => {
if (section.slug === Astro.url.pathname) {
        title = section.title + ' | ' + title;
    }
});
---

<!DOCTYPE html>
<html lang="zh-CN" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="icon" href="/favicon.webp" type="image/webp">
    <script is:inline>
      const applyTheme = (theme) => {
        document.documentElement.setAttribute('data-theme', theme);
        localStorage.setItem('theme', theme);
        const themeBtn = document.getElementById('settings-theme-' + theme);
        if (themeBtn) themeBtn.classList.add('settings-menu-item-active');
        const otherThemeBtn = document.getElementById('settings-theme-' + (theme === 'light' ? 'dark' : 'light'));
        if (otherThemeBtn) otherThemeBtn.classList.remove('settings-menu-item-active');
      }
      
      document.addEventListener("astro:page-load", () => {
        const theme = localStorage.getItem('theme') || 'light';
        applyTheme(theme);
        const settingsBtn = document.getElementById('settings-btn');
        const settingsMenu = document.getElementById('settings-menu');

        settingsBtn.addEventListener('click', () => {
          settingsMenu.classList.toggle('hidden');
          settingsMenu.classList.toggle('opacity-0');
        });

        document.addEventListener('dragstart', (event) => event.preventDefault());

        document.addEventListener('click', (event) => {
          if (!settingsBtn.contains(event.target) && !settingsMenu.contains(event.target)) {
            settingsMenu.classList.add('hidden');
            settingsMenu.classList.add('opacity-0');
          }
        });
      });
    </script>
    <ClientRouter></ClientRouter>
    <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" /> -->
    <link rel='stylesheet' href='https://chinese-fonts-cdn.deno.dev/packages/lxgwwenkaibright/dist/LXGWBright-SemiLight/result.css' />
  </head>
  <body class={`font-${locale} bg-white dark:bg-neutral-900 text-neutral-800 dark:text-neutral-100 transition-colors duration-300 overflow-x-hidden touch-none`}>
    <slot />
    <div id="settings-btn" class="fixed bottom-4 right-4 backdrop-blur-xl bg-neutral-800/30 hover:bg-neutral-800/50 dark:bg-neutral-800/30 dark:hover:bg-neutral-800/50 text-white p-3 rounded-full shadow-lg focus:outline-none z-50 select-none cursor-pointer">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.646.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 0 1 0 1.905c-.007.379.137.752.43.992l1.004.827a1.125 1.125 0 0 1-.26 1.431l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 0 1-.22.128c-.333.183-.582.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.759 6.759 0 0 1 0-1.905c.007-.379-.138-.752-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281Z" />
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
      </svg>
    </div>
  
    <div id="settings-menu" class={`fixed bottom-20 right-6 bg-white/70 dark:bg-neutral-800/50 rounded-lg shadow-xl border border-neutral-200/75 backdrop-blur-sm dark:border-neutral-700/60 w-54 z-50 select-none hidden transition-all delay-200 ease-in-out opacity-0`}>
      <div class="p-4 flex justify-between items-center">
        <span class="text-sm font-medium" >{config.settings.title}</span>
        <button class="hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-full p-2" onclick="document.getElementById('settings-menu').classList.add('hidden'); document.getElementById('settings-menu').classList.add('opacity-0')">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div>
        <div class="p-4">
          <p class="text-xs mb-4">{config.settings.theme}</p>
          <div class="flex space-x-1">
            <button onclick="applyTheme('light')" class="flex justify-center items-center size-10 rounded-full text-xs hover:bg-neutral-100 dark:hover:bg-neutral-100 hover:text-neutral-800 dark:hover:text-neutral-800" id="settings-theme-light"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960" class='size-6' fill="currentColor"><path d="M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z"/></svg></button>
            <button onclick="applyTheme('dark')" class="flex justify-center items-center size-10 rounded-full text-xs hover:bg-neutral-100 dark:hover:bg-neutral-100 hover:text-neutral-800 dark:hover:text-neutral-800" id="settings-theme-dark"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960" class='size-6' fill="currentColor"><path d="M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z"/></svg></button>
          </div>
        </div>
        <div class="p-4">
          <p class="text-xs mb-4">{config.settings.language}</p>
          <div class="rounded-md overflow-hidden">
            <a href={i18nPath('zh')} class={`w-full text-left settings-menu-item ${locale === 'zh' ? 'settings-menu-item-active' : ''}`} data-lang="zh">中文</a>
            <a href={i18nPath('en')} class={`w-full text-left settings-menu-item ${locale === 'en' ? 'settings-menu-item-active' : ''}`} data-lang="en">English</a>
            <a href={i18nPath('yue')} class={`w-full text-left settings-menu-item ${locale === 'yue' ? 'settings-menu-item-active' : ''}`} data-lang="yue">廣東話</a>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>